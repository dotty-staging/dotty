-- Error: tests/neg-custom-args/fatal-warnings/quote-type-var-with-bounds.scala:13:18 ----------------------------------
13 |    case '{ $x: C[t] } => // error
   |                  ^
   |                  Type variable `t` has partially inferred bounds <: Int.
   |
   |                  Consider defining bounds explicitly:
   |                    '{ type t <: Int; ... }
-- Error: tests/neg-custom-args/fatal-warnings/quote-type-var-with-bounds.scala:14:18 ----------------------------------
14 |    case '{ $x: D[t] } => // error
   |                  ^
   |                  Type variable `t` has partially inferred bounds >: Null <: String.
   |
   |                  Consider defining bounds explicitly:
   |                    '{ type t >: Null <: String; ... }
-- Error: tests/neg-custom-args/fatal-warnings/quote-type-var-with-bounds.scala:17:18 ----------------------------------
17 |    case '{ $x: E[t, t] } => // error
   |                  ^
   |                  Type variable `t` has partially inferred bounds <: Int.
   |
   |                  Consider defining bounds explicitly:
   |                    '{ type t <: Int; ... }
-- Error: tests/neg-custom-args/fatal-warnings/quote-type-var-with-bounds.scala:19:18 ----------------------------------
19 |    case '{ $x: F[t, t] } => // error // error
   |                  ^
   |                  Type variable `t` has partially inferred bounds <: Int.
   |
   |                  Consider defining bounds explicitly:
   |                    '{ type t <: Int; ... }
-- Error: tests/neg-custom-args/fatal-warnings/quote-type-var-with-bounds.scala:19:21 ----------------------------------
19 |    case '{ $x: F[t, t] } => // error // error
   |                     ^
   |                     Ignored bound <: String
   |
   |                     Consider defining bounds explicitly:
   |                       '{ type t <: Int & String; ... }
-- Error: tests/neg-custom-args/fatal-warnings/quote-type-var-with-bounds.scala:20:36 ----------------------------------
20 |    case '{ type t <: Int; $x: F[t, t] } => // error
   |                                    ^
   |                                    Ignored bound <: String
   |
   |                                    Consider defining bounds explicitly:
   |                                      '{ type t <: Int & String; ... }
-- Error: tests/neg-custom-args/fatal-warnings/quote-type-var-with-bounds.scala:26:17 ----------------------------------
26 |    case '[ F[t, t] ] => // error // will have a second error with SIP-53
   |                 ^
   |                 Ignored bound <: String
   |
   |                 Consider defining bounds explicitly:
   |                   '[ type t <: Int & String; ... ]
